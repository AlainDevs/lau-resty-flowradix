user  www-data;
worker_processes  auto;

#error_log  logs/error.log;
error_log  logs/error.log  notice;
#error_log  logs/error.log  debug;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


worker_rlimit_nofile 65536;
events {
    worker_connections 65536;
    multi_accept on;
}

http {
    include       mime.types;
    default_type  text/html;
    lua_package_path 'src/?.lua;src/middleware/?.lua;;';        
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    lua_shared_dict sessions 10m;
    lua_shared_dict my_cache 10m;
    lua_shared_dict content_cache 100m;
    lua_shared_dict uploads 10m;

    lua_ssl_verify_depth 2;
    #cp /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.pem
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.pem;

    #access_log  logs/access.log  main;
    access_log  off;
    lua_code_cache on;
    server_tokens off;
    sendfile        on;
#    aio threads;
#    directio 512;
    tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    resolver 1.1.1.1  valid=10s ipv6=off;

    #gzip  on;
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/x-component;



    init_by_lua_block {
        local config = require "configs.site_setting"
        local v = require "jit.v"
        v.on("logs/jit.log")
        require "resty.session".init({
            audience = "my-application",
            secret = config.session.secret,
            storage = "shm",
            remember = false,
            idling_timeout = 86400, -- 1 day
            rolling_timeout = 86400, -- 1 day
        })
    }

    init_worker_by_lua_block {
        -- local timer_manager = require "middleware.timer_manager"
        local ngx_timer = ngx.timer.every
        local delay = 60  -- 60 second
        local ngx_log, ngx_ERR = ngx.log, ngx.ERR
        if 0 == ngx.worker.id() then
            -- put your timer code here
        end
    }
    server {
        listen       80 reuseport;
        http2 off; #only effective in HTTPS
        #server_name  localhost;

        charset utf-8;

        #access_log  logs/host.access.log  main;
        set $template_root src/views;
        set $original_filename "";
        location = /favicon.ico {
            rewrite ^ static/images/fav.png permanent;
        }
        location / {
            client_max_body_size 20M;
            limit_except GET POST { deny  all; }
            #charset text/html;
            content_by_lua_file src/main.lua;
        }
        location /internal/ {
            internal;  # This directive makes the location internal-only
            limit_except GET POST { deny all; }
            content_by_lua_file src/main.lua;
        }

        location /internal/serve_file/ {
            internal;  # This makes the location accessible only through internal redirects
            alias src/uploads/;  # Set this to your actual uploads directory
            
            if ($args ~ "filename=(.+)") {
                set $filename $1;
            }
            
            add_header Content-Disposition 'attachment; filename="$filename"';
            add_header Content-Type application/octet-stream;
            
            # For debugging
            # add_header X-Debug-Filename $filename;
        }

        location /static {alias src/static;log_not_found off;try_files $uri =404;}
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
    }
}
